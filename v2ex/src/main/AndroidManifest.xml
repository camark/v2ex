<manifest xmlns:android="http://schemas.android.com/apk/res/android" package="com.sonaive.v2ex">

    <uses-sdk
        android:minSdkVersion="14"
        android:targetSdkVersion="21" />

    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
    <uses-permission android:name="android.permission.USE_CREDENTIALS" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_SYNC_SETTINGS" />
    <uses-permission android:name="android.permission.READ_SYNC_STATS" />

    <application
        android:allowBackup="true"
        android:label="@string/app_name"
        android:icon="@drawable/ic_launcher"
        android:theme="@style/Theme.V2ex">

        <activity android:name=".ui.debug.TestActivity"
            android:label="@string/app_name"
            android:theme="@style/Theme.V2ex.Images" >

            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

        </activity>

        <service
            android:name=".ui.debug.RSSPullService"
            android:exported="false"/>

        <!--
            The attribute "android:exported" must be set to "false" to restrict this content
            provider to its own app. Otherwise, all apps could access it.
         -->
        <provider
            android:name=".provider.V2exProvider"
            android:exported="false"
            android:authorities="@string/authority"/>
    </application>

</manifest>
