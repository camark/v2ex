<manifest xmlns:android="http://schemas.android.com/apk/res/android" package="com.sonaive.v2ex">

    <uses-sdk
        android:minSdkVersion="14"
        android:targetSdkVersion="21" />

    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
    <uses-permission android:name="android.permission.USE_CREDENTIALS" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_SYNC_SETTINGS" />
    <!-- Required to register a SyncStatusObserver to display a "syncing..." progress indicator. -->
    <uses-permission android:name="android.permission.READ_SYNC_STATS" />
    <!-- Required to enable our SyncAdapter after it's created. -->
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS" />
    <!-- Required because we're manually creating a new account. -->
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" />

    <application
        android:allowBackup="true"
        android:label="@string/app_name"
        android:icon="@drawable/ic_launcher"
        android:theme="@style/Theme.V2ex">

        <activity android:name=".ui.FeedsActivity"
            android:label="@string/app_name"
            android:theme="@style/Theme.V2ex.Feeds" >

            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

        </activity>

        <activity android:name=".ui.FeedDetailActivity"
            android:label="@string/app_name"
            android:theme="@style/Theme.V2ex.FeedDetail" >
        </activity>

        <activity android:name=".ui.NodesActivity"
            android:label="@string/app_name"
            android:theme="@style/Theme.V2ex.Nodes" >
        </activity>

        <activity android:name=".ui.SearchActivity"
            android:label=""
            android:theme="@style/Theme.V2ex.Search"
            android:parentActivityName=".ui.FeedsActivity" >

            <!-- This Activity handles the search intent -->
            <intent-filter>
                <action android:name="android.intent.action.SEARCH" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
            <meta-data android:name="android.app.searchable" android:resource="@xml/searchable" />
        </activity>

        <activity android:name=".ui.ViewPagerActivity"
            android:theme="@style/Theme.V2ex.ViewPager" >

        </activity>

        <activity android:name=".ui.debug.TestActivity"
            android:label="@string/app_name"
            android:theme="@style/Theme.V2ex.Images" >
        </activity>

        <service
            android:name=".ui.debug.RSSPullService"
            android:exported="false"/>

        <!--
        This service implements our SyncAdapter. It needs to be exported, so that the system
        sync framework can access it.
        -->
        <service
            android:name=".sync.SyncService"
            android:exported="true">

            <!--
            This intent filter is required. It allows the system to launch our sync service
            as needed.
            -->
            <intent-filter>
                <action android:name="android.content.SyncAdapter" />
            </intent-filter>
            <!-- This points to a required XML file which describes our SyncAdapter. -->
            <meta-data
                android:name="android.content.SyncAdapter"
                android:resource="@xml/syncadapter" />
        </service>

        <!--
        This implements the account we'll use as an attachment point for our SyncAdapter. Since
        our SyncAdapter doesn't need to authenticate the current user, this account's
        implementation is largely empty.

        It's also possible to attach a SyncAdapter to an existing account provided by another
        package. In that case, this element could be omitted here.
        -->
        <service android:name=".sync.AccountService">

            <!-- Required filter used by the system to launch our account service. -->
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator" />
            </intent-filter>
            <!-- This points to an XMLf ile which describes our account service. -->
            <meta-data
                android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator" />
        </service>

        <!--
            The attribute "android:exported" must be set to "false" to restrict this content
            provider to its own app. Otherwise, all apps could access it.
         -->
        <provider
            android:name=".provider.V2exProvider"
            android:exported="false"
            android:authorities="com.sonaive.v2ex"
            android:syncable="true" />
    </application>

</manifest>
